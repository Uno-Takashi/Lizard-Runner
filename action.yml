name: "Lizard Runner"
description: "GitHub action to lint your python code with bandit"
branding:
  icon: "wind"
  color: "yellow"
inputs:
  path:
    description: "File or directory to run lizard on"
    required: false
    default: "./"
  cli_output:
    description: ""
    required: false
    default: "./lizard_cli.txt"
  language:
    description: >
      List the programming languages you want to analyze. 
      if left empty, it'll search for all languages it knows. 
      `lizard -l cpp -l java`searches for C++ and Java code. 
      The available languages are:
      cpp, java, csharp, javascript, python, objectivec, ttcn, ruby, 
      php, swift, scala, GDScript, go, lua, rust, typescript
    required: false
    default: "python"
  CCN:
    description: >
      Threshold for cyclomatic complexity number warning. 
      The default value is 15.
      Functions with CCN bigger than it will generate warning
    required: false
    default: "15"
  input_file:
    description: "get a list of filenames from the given file"
    required: false
    default: ""
  output_file:
    description: >
      Output file. The output format is inferred from the file extension (e.g.
      .html), unless it is explicitly specified (e.g. using --xml).
    required: false
    default: ""
  length:
    description: >
      Threshold for maximum function length warning. The default value is 1000.
      Functions length bigger than it will generate warning
    required: false
    default: "1000"
  arguments:
    description: "Limit for number of parameters"
    required: false
    default: ""
  warnings_only :
    description: >
      Show warnings only, using clang/gcc's warning format for printing
      warnings. http://clang.llvm.org/docs/UsersManual.html#cmdoption-
      fdiagnostics-format
    required: false
    default: "false"
  warning-msvs :
    description: >
      Show warnings only, using Visual Studio's warning format for printing
      warnings. https://msdn.microsoft.com/en-us/library/yxkt8b26.aspx
    required: false
    default: "false"
  ignore_warnings :
    description: >
      If the number of warnings is equal or less than the number, the tool will
      exit normally; otherwise, it will generate error. If the number is
      negative, the tool exits normally regardless of the number of warnings.
      Useful in makefile for legacy code.
    required: false
    default: ""
  exclude :
    description: >
      Exclude files that match the pattern. * matches everything, ? matches any
      single character, "./folder/*" exclude everything in the folder
      recursively. Multiple patterns can be specified. Don't forget to add ""
      around the pattern.
    required: false
    default: ""
  working_threads  :
    description: >
      number of working threads. The default lizard value is 1. Using a bigger number
      can fully utilize the CPU and often faster.
    required: false
    default: "4"
  xml :
    description: >
      Generate XML in cppncss style instead of the tabular output. Useful to
      generate report in Jenkins server
    required: false
    default: "false"
  html :
    description: "Output HTML report"
    required: false
    default: "false"
  modified :
    description: >
      alculate modified cyclomatic complexity number , which count a
      switch/case with multiple cases as one CCN.
    required: false
    default: "false"
  extension :
    description: >
      User the extensions. The available extensions are: -Ecpre: it will ignore
      code in the #else branch. -Ewordcount: count word frequencies and
      generate tag cloud. -Eoutside: include the global code as one function.
      -EIgnoreAssert: to ignore all code in assert. -ENS: count nested control
      structures.
    required: false
    default: ""
  sort :
    description: >
      Sort the warning with field. The field can be nloc,
      cyclomatic_complexity, token_count, parameter_count, etc. Or an customized field.
    required: false
    default: ""
  Threshold :
    description: >
      Set the limit for a field. The field can be nloc, cyclomatic_complexity,
      token_count, parameter_count, etc. Or an customized file. Lizard will
      report warning if a function exceed the limit
    required: false
    default: ""
  whitelist :
    description: >
      The path and file name to the whitelist file. It's './whitelizard.txt' by
      default. Find more information in README.
    required: false
    default: "./whitelizard.txt"
  lizard_options:
    description: ""
    required: false
    default: ""
outputs:
  result_cli:
    description: ""

runs:
  using: "docker"
  image: "Dockerfile"
  args:
    - ${{ inputs.path }}
    - ${{ inputs.lizard_options }}
